{"version":3,"sources":["components/EditTargetModal.jsx","components/Details.jsx","data.js","components/SingleResult.jsx","components/AddTargetModal.jsx","utilities.js","App.js","index.js"],"names":["EditTargetModal","listing","isVisible","handleModalClick","updateEntry","useState","formData","setFormData","useEffect","companyName","company_info","name","companyDomain","url","sector","description","streetNumber","geo","streetName","city","stateCode","employees","metrics","marketCap","annualRevenue","status","handleChange","e","target","id","value","Button","type","variant","onClick","Modal","show","onHide","keyboard","centered","Header","closeButton","Title","Body","Form","onSubmit","preventDefault","Group","className","controlId","Label","Control","placeholder","onChange","defaultValue","Details","listings","listingId","useParams","history","useHistory","setListing","setIsVisible","found","find","company","parseInt","Card","style","width","Col","xs","src","logo","fallbackImage","Text","goBack","data","SingleResult","props","setShow","handleClose","Footer","delete","href","rel","to","AddTargetModal","addEntry","setCompanyName","setCompanyDomain","fetchBigPicture","domain","a","key","env","API_KEY","requestOptions","headers","fetch","then","response","json","handleSubmit","s","charAt","toUpperCase","slice","App","setListings","fetchedData","setFetchedData","length","nextId","setNextId","_deleteEntry","filter","exact","path","map","entry","lookup_name","lookup_domain","key_contacts","console","log","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73653cdb.chunk.js","sourcesContent":["import { Modal, Button, Form } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport './Details.css';\n\nconst EditTargetModal = ({listing, isVisible, handleModalClick, updateEntry}) => {\n    const [formData, setFormData] = useState({});\n\n    useEffect(()=> {\n        if (!!listing) {\n            setFormData({\n                companyName: listing.company_info.name,\n                companyDomain: listing.company_info.url,\n                sector: listing.company_info.sector,\n                description: listing.company_info.description,\n                streetNumber: listing.company_info.geo.streetNumber,\n                streetName: listing.company_info.geo.streetName,\n                city: listing.company_info.geo.city,\n                stateCode: listing.company_info.geo.stateCode,\n                employees: listing.metrics.employees,\n                marketCap: listing.metrics.marketCap,\n                annualRevenue: listing.metrics.annualRevenue,\n                status: listing.status\n            });\n        }\n    },[listing])\n    const handleChange = (e) => {\n        setFormData({...formData, [e.target.id]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateEntry(listing.id, formData.status);\n        handleModalClick();\n    };\n\n    return (\n        <>\n            <Button \n                type=\"button\" \n                id=\"backButton\" \n                variant=\"primary\"\n                onClick={handleModalClick}>Edit</Button>\n            <Modal \n                show={isVisible} \n                onHide={handleModalClick} \n                keyboard={false}\n                centered\n            >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit Target Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group className=\"mb-3\" controlId=\"companyName\">\n                                <Form.Label>Company Name</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Enter the company name\"\n                                    value={formData.companyName}\n                                    onChange={(e)=>handleChange(e)} \n                                />\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"companyDomain\">\n                                <Form.Label>Domain</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Enter a url to lookup\" \n                                    value={formData.companyDomain}\n                                    onChange={(e)=>handleChange(e)}/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"sector\">\n                                <Form.Label>Sector</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Enter the sector\" \n                                    value={formData.sector}\n                                    onChange={(e)=>handleChange(e)}/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"status\">\n                                <Form.Label>Status</Form.Label>\n                                <select \n                                    id=\"status\"\n                                    className=\"form-control\"\n                                    defaultValue={formData.status}\n                                >\n                                    <option value='researching'>Researching</option>\n                                    <option value='pending'>Pending</option>\n                                    <option value='approved'>Approved</option>\n                                    <option value='declined'>Declined</option>\n                                </select>\n                            </Form.Group>\n                            <Button \n                                variant=\"primary\" \n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n            </Modal>\n        </> \n    )\n};\n\nexport default EditTargetModal;","import { useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'; \nimport { Button, Card, Col } from 'react-bootstrap';\nimport EditTargetModal from './EditTargetModal';\nimport ReactImageFallback from 'react-image-fallback';\nimport './Details.css';\n\n\nconst Details = ({listings, updateEntry}) => {\n    const { listingId } = useParams();\n    const history = useHistory();\n    const [listing, setListing] = useState(null);\n    const [isVisible, setIsVisible] = useState(false);\n    const handleModalClick = () => setIsVisible(!isVisible);\n    \n\n    useEffect(() => {\n        if (!!listings) {\n            const found = listings.find(company => {\n                return company.id === parseInt(listingId);\n            });\n            setListing(found);\n        };\n    },[listings, listingId]);\n\n\n    return (\n        <div className=\"content\"> \n            {!!listing ? \n                <>\n                <h1>{listing.company_info.name}</h1>\n                <h4>Status: {listing.status}</h4>\n                    <Card key={listingId} style={{ width: '90vw' }}>\n                        <div className=\"row justify-content-center\">\n                            <Col xs={3} className=\"d-flex align-self-center justify-content-center\">\n                                <div className=\"img-wrapper d-block\">\n                                    <ReactImageFallback\n                                                    src={listing.company_info.logo} \n                                                    fallbackImage=\"/logo192.png\"\n                                                    className=\"card-img\" \n                                    />\n                                </div>\n                            </Col>\n                            <Col xs={9}>\n                                <Card.Body className=\"align-left\">\n                                    <Card.Text>\n                                        <b>Sector: </b>{listing.company_info.sector}<br/>\n                                        <b>HQ Location: </b>{ !!listing.company_info.geo.city ? \n                                        `${listing.company_info.geo.city}, ${listing.company_info.geo.stateCode}`\n                                        : null}<br/>\n                                        <b>Employees: </b>{listing.metrics.employees}<br/>\n                                        <b>Market Cap: </b>{listing.metrics.marketCap}<br/>\n                                        <b>Annual Revenue: </b>{listing.metrics.annualRevenue}<br/>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Col>\n                \n                        </div>    \n                    </Card>\n                    {/* //Notes card */}\n                    <Card style={{ width: '90vw' }}>\n                        <div className=\"row justify-content-center\">\n                        \n                        </div>\n                    </Card>\n                </> : null }\n            <div>\n                <EditTargetModal \n                    listing={listing}\n                    handleModalClick={handleModalClick}\n                    isVisible={isVisible}\n                    updateEntry={updateEntry}/>\n                <Button type=\"button\" id=\"backButton\" className=\"btn btn-secondary\" onClick={()=> {history.goBack()}}>Back</Button>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","//data object mocks up basic company data\n\nexport const data =\n\n[\n    {\n        \"id\": 0,\n        \"status\": \"researching\",\n        \"key_contacts\" : [\n            \"\", \"\"\n        ],\n        \"company_info\": {\n            \"name\": \"Uber Technologies\",\n            \"url\" : \"https://www.uber.com\",\n            \"logo\": \"http://logo.bigpicture.io/logo/uber.com\",\n            \"sector\": \"Technology\",\n            \"description\": \"Uber Technologies, Inc. develops and operates proprietary technology applications in the United States, Canada, Latin America, Europe, the Middle East, Africa, and the Asia Pacific. It connects consumers with independent providers of ride services for ridesharing services and other forms of transportation services, including public transit, as well as connect riders and other consumers with restaurants, grocers, other stores, and delivery service providers for meal preparation, grocery, and other delivery services...\",\n            \"geo\": {\n                \"city\": \"San Francisco\",\n                \"stateCode\": \"CA\",\n                \"streetNumber\": \"1515\",\n                \"streetName\": \"3rd Street\"\n            }\n        },  \n        \"metrics\": {\n            \"employees\": 22200,\n            \"marketCap\": 86561472512,\n            \"annualRevenue\": 10794000384\n        }\n    },\n    {\n        \"id\": 1,\n        \"status\": \"pending\",\n        \"key_contacts\" : [\n            \"\", \"\"\n        ],\n        \"company_info\": {\n            \"name\": \"Target\",\n            \"url\" : \"https://www.target.com\",\n            \"logo\": \"http://logo.bigpicture.io/logo/target.com\",\n            \"sector\": \"Retail\",\n            \"description\": \"Uber Technologies, Inc. develops and operates proprietary technology applications in the United States, Canada, Latin America, Europe, the Middle East, Africa, and the Asia Pacific. It connects consumers with independent providers of ride services for ridesharing services and other forms of transportation services, including public transit, as well as connect riders and other consumers with restaurants, grocers, other stores, and delivery service providers for meal preparation, grocery, and other delivery services...\",\n            \"geo\": {\n                \"city\": \"Minneapolis\",\n                \"stateCode\": \"MN\",\n                \"streetNumber\": \"1000\",\n                \"streetName\": \"Nicollet Mall\"\n            }\n        },  \n        \"metrics\": {\n            \"employees\": 409000,\n            \"marketCap\": 124058624000,\n            \"annualRevenue\": 98143002624\n        }\n    },\n];\n\n//Mock up of note table: id (references companies.id), content, timestamp\nexport const notes = [\n\n]\n\n","import ReactImageFallback from 'react-image-fallback';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Col, Modal } from 'react-bootstrap';\n\n\nconst SingleResult = (props) => {\n    const { id, status, company_info } = props.listing;\n    const { name, url, logo } = company_info;\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleOpen = () => setShow(true);\n\n    const deleteAndClose = () => {\n        props.delete(id);\n        handleClose();\n    };\n    \n    return (\n        <>\n            <Modal show={show} onHide={handleClose} keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Target</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                        Are you sure you want to delete this target?\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n                    <Button variant=\"danger\" onClick={deleteAndClose}>Delete</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card key={id} style={{ width: '90vw' }}>\n                <div className=\"row justify-content-center\">\n                    <Col xs={3} className=\"d-flex align-self-center justify-content-center\">\n                        <div className=\"img-wrapper d-block\">\n                            <ReactImageFallback\n                                            src={logo} \n                                            fallbackImage=\"/logo192.png\"\n                                            className=\"card-img\" \n                            />\n                        </div>\n                    </Col>\n                    <Col xs={4}>\n                        <Card.Body className=\"align-left\">\n                            <Card.Title>\n                                <a href={url} target='_blank' rel=\"noreferrer\">\n                                    <b>{name}</b>\n                                </a>\n                            </Card.Title>\n                            <Card.Text>\n                                Status: {status}\n                            </Card.Text>\n                        </Card.Body>\n                    </Col>\n                    <Col xs={4} className=\"d-flex align-self-center justify-content-center\">\n                        <Link to={`/${id}`}>\n                                <Button variant=\"primary\">Details</Button>\n                        </Link>\n                        <Button variant=\"danger\" onClick={()=> handleOpen()}>Delete</Button>\n                    </Col>\n                </div>    \n            </Card>\n        </>\n    )\n};   \n\nexport default SingleResult;\n\n","import { Modal, Button, Form } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { capitalize } from '../utilities';\nimport env from 'react-dotenv';\n\nconst AddTargetModal = ({isVisible, handleModalClick, addEntry }) => {\n    const [companyName, setCompanyName] = useState('');\n    const [companyDomain, setCompanyDomain] = useState('');\n    // const [validated, setValidated] = useState(false);\n\n    const fetchBigPicture = async (domain) => {\n        const url = `https://company.bigpicture.io/v1/companies/find?domain=${domain}`;\n        const key = env.API_KEY;\n        const requestOptions = {\n            headers: {'Authorization': key}    \n        };\n        const response = await fetch(url, requestOptions)\n            .then(response => response.json())\n        return response;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const name = capitalize(companyName);\n        //validate domain name\n        const response = await fetchBigPicture(companyDomain);\n        if (!!response.geo) {\n            addEntry(name, companyDomain, response)\n        } else {\n            addEntry(name, companyDomain, null);\n        }\n        handleModalClick();\n    };\n\n    const handleChange = (e) => {\n        if (e.target.id === 'companyName') {\n            setCompanyName(e.target.value)\n        }; \n        if (e.target.id === 'companyDomain') {\n            setCompanyDomain(e.target.value)\n        };\n    };\n\n\n    return (\n        <>\n            <Button \n                id=\"addButton\" \n                variant=\"primary\"\n                onClick={handleModalClick}\n            >\n                Add Target\n            </Button>\n            <Modal \n                show={isVisible} \n                onHide={handleModalClick} \n                keyboard={false}\n                centered\n            >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add New Target</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group className=\"mb-3\" controlId=\"companyName\">\n                                <Form.Label>Company Name</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Enter the company name\"\n                                    value={companyName}\n                                    onChange={(e)=>handleChange(e)} \n                                />\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"companyDomain\">\n                                <Form.Label>Domain</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"Enter a url to lookup\" \n                                    value={companyDomain}\n                                    onChange={(e)=>handleChange(e)}/>\n                            </Form.Group>\n                            <Button \n                                variant=\"primary\" \n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n            </Modal>\n        </> \n    )\n};\n\nexport default AddTargetModal;","//Capitalizes the first letter of a string\n const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\n\n\nexport {capitalize};","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Details from './components/Details';\nimport { useState, useEffect } from 'react';\nimport {data} from './data';\nimport './components/Dashboard.css';\nimport SingleResult from './components/SingleResult';\nimport Modal from \"./components/AddTargetModal\";\n\nfunction App() {\n  const [listings, setListings] = useState(null);\n  const [fetchedData, setFetchedData] = useState(data);\n  const [nextId, setNextId] = useState(data.length + 1)\n  const [isVisible, setIsVisible] = useState(false);\n  const handleModalClick = () => setIsVisible(!isVisible);\n\n  useEffect(() => {\n    //With a backend, this would be fetching from the database and updating the page\n    setListings(fetchedData);\n  },[fetchedData]);\n\n  const _deleteEntry = (id) => {\n      //Normally, this would POST to the backend, triggering the useEffect hook\n      setFetchedData(fetchedData.filter(listing => listing.id !== id));\n  };\n\n  const _addEntry = (lookup_name, lookup_domain, response) => {\n    //Looks for a response from BigPictureAPI\n    if (!!response) {\n      setFetchedData([...fetchedData, {\n        id: nextId,\n        status: 'researching',\n        key_contacts: '',\n        company_info: {\n          name: response.name,\n          url: response.url,\n          logo: response.logo,\n          sector: response.sector,\n          description: response.logo,\n          geo: {\n            city: response.geo.city,\n            stateCode: response.geo.stateCode,\n            streetNumber: response.geo.streetNumber,\n            streetName: response.geo.streetName\n          }\n        },\n        metrics: {\n          employees: response.metrics.employees,\n          marketCap: response.metrics.marketCap,\n          annualRevenue: response.metrics.annualRevenue\n        }\n      } ]);\n    } else {\n      setFetchedData([...fetchedData, {\n        id: nextId,\n        status: 'researching',\n        key_contacts: '',\n        company_info: {\n          name: lookup_name,\n          url: 'https://' + lookup_domain,\n          logo: '',\n          sector: '',\n          description: '',\n          geo: {\n            city: '',\n            stateCode: '',\n            streetNumber: '',\n            streetName: ''\n          }\n        },\n        metrics: {\n          employees: '',\n          marketCap: '',\n          annualRevenue: ''\n        }\n      } ]);\n    }\n    console.log(fetchedData);\n    setNextId(nextId + 1);\n  };\n\n  const _updateEntry = (id, status) => {\n      //TODO: allow users to add notes\n      setFetchedData(\n        [...fetchedData.map(el => el.id === id ? \n          {...el, 'status': status} : el )\n        ])\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <h1>Target Tracker</h1>\n        <Switch>\n          <Route exact path='/'>\n            <div className=\"content\">\n              <div className=\"card-container\">\n                  { fetchedData ? \n                  fetchedData.map(entry => (\n                      <SingleResult\n                          key={entry.id} \n                          listing={entry}\n                          delete={_deleteEntry}\n                      />\n                  ))\n                : null}\n              </div>\n              <Modal \n                isVisible={isVisible}\n                handleModalClick={handleModalClick}\n                addEntry={_addEntry}\n              />\n            </div>\n          </Route>\n          <Route path={'/:listingId'}>\n            <Details \n              listings={listings}\n              updateEntry={_updateEntry}\n            />\n          </Route>\n          <Route path='*'>\n            <Redirect to='/'/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}